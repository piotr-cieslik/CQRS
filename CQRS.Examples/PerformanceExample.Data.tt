// <auto-generated />
using System.Collections.Generic;

namespace CQRS.Examples
{
    public sealed partial class PerformanceExample
    {
<# var numberOfItems = 1000; #>
<# for(var i=1; i<=numberOfItems; i++) { #>
        public sealed class Command<#=i#> : ICommand<object>
        {
        }

        public sealed class CommandHandler<#=i#> : ICommandHandler<Command<#=i#>, object>
        {
            public object Handle(Command<#=i#> command)
            {
                return new object();
            }
        }

<# } #>
        public sealed class HandlersLookup : CQRS.HandlersLookup
        {
            protected override IEnumerable<CommandDefinition> CommandHandlers()
            {
<# for(var i=1; i<=numberOfItems; i++) { #>
                yield return CommandHandler(() => new CommandHandler<#=i#>());
<# } #>
            }

            protected override IEnumerable<QueryDefinition> QueryHandlers()
            {
                yield break;
            }
        }
    }
}