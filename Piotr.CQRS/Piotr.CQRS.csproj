<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard1.0</TargetFramework>
    <CodeAnalysisRuleSet>Piotr.CQRS.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <WarningLevel>3</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningsAsErrors />
  </PropertyGroup>

  <PropertyGroup>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Authors>Piotr Cieślik</Authors>
    <Company />
    <Product />
    <PackageProjectUrl>https://github.com/piotr-cieslik/Piotr.CQRS</PackageProjectUrl>
    <RepositoryUrl>https://github.com/piotr-cieslik/Piotr.CQRS</RepositoryUrl>
    <PackageTags>CQRS</PackageTags>
    <Description>My implementation of CQRS (Command Query Responsibility Segregation) in C#. I successfully use this approach in single and medium size projects.</Description>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="stylecop.json" />
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="stylecop.json" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
